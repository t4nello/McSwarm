<<<<<<<< HEAD:managament/management-stack.yml
version: '3.8'

services:
  traefik:
    image: "traefik:v3.3.2"
    env_file:
      - managament-stack.env
    command:
      - --log.level=DEBUG
      - --api=true
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --entryPoints.web.address=:80  
      - --entrypoints.websecure.address=:443
      - --entrypoints.minecraft-server.address=:${MINECRAFT_SERVER_PORT:-25565}
      - --api.basePath=/traefik
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
      - mode: host
        protocol: tcp
        published: ${MINECRAFT_SERVER_PORT:-25565}
        target: ${MINECRAFT_SERVER_PORT:-25565}
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./usersfile:/usersfile        
    labels:
        - traefik.enable=true
        - "traefik.http.routers.dashboard.entrypoints=web"
        - "traefik.http.routers.dashboard.rule=PathPrefix(`/traefik`)"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.routers.dashboard.middlewares=simpleauth"
        - "traefik.http.middlewares.simpleauth.basicauth.usersfile=./usersfile"
        - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"   
    networks:
      - minecraft
      - management
      - monitoring

  agent:
    image: portainer/agent:2.21.3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes       
    networks:
      - management
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]

  portainer:
    image: portainer/portainer-ce:2.21.3
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer_data:/data
    networks:
      - management
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=PathPrefix(`/portainer`)"
      - "traefik.http.routers.portainer.entryPoints=web"
      - "traefik.http.routers.portainer.tls=false"
      - "traefik.http.routers.portainer.priority=41"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.middlewares.portainer-stripprefix.stripprefix.prefixes=/portainer"
      - "traefik.http.routers.portainer.middlewares=portainer-stripprefix"
      - "traefik.docker.network=management"

networks:
  management:
    external: true
  monitoring:
    external: true
  minecraft:
    external: true


volumes:
   portainer_data: 
========
version: '3.8'

services:

  traefik:
    image: "traefik:v3.3.2"
    env_file:
      - managament-stack.env
    command:
      - --log.level=DEBUG
      - --api=true
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --entryPoints.web.address=:80  
      - --entrypoints.websecure.address=:443
      - --entrypoints.minecraft-server.address=:${MINECRAFT_SERVER_PORT:-25565}
      - --api.basePath=/traefik
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
      - mode: host
        protocol: tcp
        published: ${MINECRAFT_SERVER_PORT:-25565}
        target: ${MINECRAFT_SERVER_PORT:-25565}
    deploy:
      mode: global
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./usersfile:/usersfile        
    labels:
        - traefik.enable=true
        - "traefik.http.routers.dashboard.entrypoints=web"
        - "traefik.http.routers.dashboard.rule=PathPrefix(`/traefik`)"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.routers.dashboard.middlewares=simpleauth"
        - "traefik.http.middlewares.simpleauth.basicauth.usersfile=./usersfile"
        - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"   
    networks:
      - minecraft
      - management
      - monitoring

  agent:
    image: portainer/agent:2.21.3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes       
    networks:
      - management
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:2.21.3
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9000:9000"
    volumes:
      - portainer_data:/data
    networks:
      - management
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=PathPrefix(`/portainer`)"
      - "traefik.http.routers.portainer.entryPoints=web"
      - "traefik.http.routers.portainer.tls=false"
      - "traefik.http.routers.portainer.priority=41"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.middlewares.portainer-stripprefix.stripprefix.prefixes=/portainer"
      - "traefik.http.routers.portainer.middlewares=portainer-stripprefix"
      - "traefik.docker.network=management"

networks:
  management:
    external: true
  monitoring:
    external: true
  minecraft:
    external: true


volumes:
   portainer_data: 
>>>>>>>> 4438921ef8c58b8974fa47614d57eb23827761c2:managament/managament-stack.yml
