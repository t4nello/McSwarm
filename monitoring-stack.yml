version: '3.8'

services:
  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    restart: on-failure
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - prometheus_data:/prometheus
      - ${MONITORING_CONFIG_PATH}/prometheus.yml:/etc/prometheus/prometheus.yml 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=PathPrefix(`/prometheus`)"
      - "traefik.http.routers.prometheus.entryPoints=web"
      - "traefik.http.routers.prometheus.tls=false"
      - "traefik.http.routers.prometheus.priority=15"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.middlewares.prometheus-stripprefix.stripprefix.prefixes=/prometheus"
      - "traefik.http.routers.prometheus.middlewares=prometheus-stripprefix"
      - "traefik.docker.network=monitoring"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'  
      - '--storage.tsdb.path=/prometheus'        
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    restart: on-failure
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    environment:
      - ${GF_SECURITY_ADMIN_USER}
      - ${GF_SECURITY_ADMIN_PASSWORD}
      - GF_SECURITY_ADMIN_PASSWORD=changeme
      - GF_SERVER_ENFORCE_DOMAIN=false
      - GF_SERVER_HTTP_ADDR=0.0.0.0
      - GF_SERVER_HTTP_PORT=3000
      - GF_SERVER_PROTOCOL=http
      - GF_AUTH_ANONYMOUS_ENABLED=TRUE
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_BASIC_ENABLED=FALSE
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/dashboard.json 
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    restart: on-failure
    volumes:
      - grafana_data:/var/lib/grafana
      - ${MONITORING_CONFIG_PATH}/provisioning:/etc/grafana/provisioning
      - ${MONITORING_CONFIG_PATH}/dashboards:/var/lib/grafana/dashboards
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)"
      - "traefik.http.routers.grafana.entryPoints=web"
      - "traefik.http.routers.grafana.tls=false"
      - "traefik.http.routers.grafana.priority=10"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.grafana-stripprefix.stripprefix.prefixes=/grafana"
      - "traefik.http.routers.grafana.middlewares=grafana-stripprefix"
      - "traefik.docker.network=monitoring"
    depends_on:
      - prometheus
    networks:
      - monitoring

networks:
  monitoring:
    external: true

volumes:
  prometheus_data: {}
  grafana_data: {}
